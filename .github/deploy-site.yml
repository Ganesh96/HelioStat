# .github/workflows/deploy-site.yml

name: Generate and Deploy Analysis Site

# Run this workflow every time you push to the main branch
on:
  push:
    branches:
      - main # Or your default branch

# Sets permissions for the workflow to deploy to GitHub Pages
permissions:
  contents: write # Allows it to commit changes (like updated images/README)
  pages: write
  id-token: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Check out your repository code
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10' # Specify your Python version

      # Step 3: Install the required Python libraries
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      # Step 4: Run your analysis script to generate new images and tables
      # (This assumes your script is modified to save outputs)
      - name: Run analysis to generate artifacts
        run: python main_solar_analysis.py # Or whichever script generates everything

      # Step 5: Commit the updated README.md and images back to the repository
      - name: Commit updated results
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add .
          # Check if there are any changes to commit
          if git diff --staged --quiet; then
            echo "No changes to commit."
          else
            git commit -m "Automated update of analysis results"
            git push
          fi

      # Step 6: Deploy the repository content to GitHub Pages
      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4